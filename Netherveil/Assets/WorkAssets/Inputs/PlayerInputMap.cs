//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/WorkAssets/Inputs/PlayerInputMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Netherveil.Inputs
{
    public partial class @PlayerInputMap: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerInputMap()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputMap"",
    ""maps"": [
        {
            ""name"": ""Keyboard"",
            ""id"": ""bb78d813-0d21-454e-a9d4-2e93d94b28b4"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""5608f3eb-ca2b-42c3-a2de-6adfffa8f11a"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Basic Attack"",
                    ""type"": ""Button"",
                    ""id"": ""017a0e5c-3a7a-4866-ade3-788788399d8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Charged Attack"",
                    ""type"": ""Button"",
                    ""id"": ""2b38a7ee-7606-41ae-84ee-66f698cda467"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throw/Retrieve Spear"",
                    ""type"": ""Button"",
                    ""id"": ""cd9ce065-145a-45cf-b78a-843dd1732144"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""3e093fa7-fc99-4735-8a5b-e33a66875adc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Map"",
                    ""type"": ""Button"",
                    ""id"": ""65bb6ba4-6bfe-4405-bf76-aaf08c00aa82"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quest"",
                    ""type"": ""Button"",
                    ""id"": ""13868f5d-afd8-438b-bd44-1d11408a028c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""b509354d-e83b-46a0-bb93-ea4669c59244"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Active Item"",
                    ""type"": ""Button"",
                    ""id"": ""5fc5dc1c-aecc-4d80-913a-b1cbe96ddee5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Special Ability"",
                    ""type"": ""Button"",
                    ""id"": ""f68d8ec1-c558-42e7-aa7e-35523a654c45"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkipDialogue"",
                    ""type"": ""Button"",
                    ""id"": ""75f5f184-6459-4d58-973d-87b615db770c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""725f77ac-803c-4ebe-9677-9c6adc825539"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""162a7f5e-1c53-41cc-abcb-f9c31ddaec3e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""KB"",
                    ""id"": ""e8aa7670-8f3d-4223-a9bb-da4b45fe2244"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3454e522-9750-4924-9e17-fa766533f680"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e45c286e-6591-4ee3-97bd-cdab7e0f11e5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8afcdcb0-8a53-4573-871c-ed8c390e052c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5a9b8816-8a4c-499b-8b28-a11d859665fd"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fe89720e-834b-4be8-b982-91930bdcb553"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Basic Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3156ed42-dacd-4e06-be49-fd651a04d142"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Charged Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d55cdba2-7c6c-4c4c-a06d-2465116d8fda"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throw/Retrieve Spear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7779c019-7cb2-4192-9aaa-684ea22d8d53"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1315a9f1-a6e4-43df-b268-71ab6b910c96"",
                    ""path"": ""<Keyboard>/semicolon"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f207a82-070d-47a3-a73a-24e69bd8fec2"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a3db6f9-dc2d-42c7-8754-f7c3ab1c7d24"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Active Item"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3aa72909-9e7a-4369-85e0-826f76fafd78"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special Ability"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c393c1c7-1cfd-42ca-854a-dbe1211d263e"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quest"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd0f9368-a373-42a6-b0c6-d01f9cd40e92"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkipDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1145289-48ff-4a9f-b365-c8854a68d80a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""103b9c72-108d-4a1f-aa1a-cfaae2a47d21"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""id"": ""b1c8ef0c-2982-421a-b375-78581075bd3f"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""133bdb3c-dbcb-4413-9585-dfa8cd5a932c"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Basic Attack"",
                    ""type"": ""Button"",
                    ""id"": ""11ad5c4a-022f-4d2f-825e-e038225ef2c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Charged Attack"",
                    ""type"": ""Button"",
                    ""id"": ""3c4db0dc-e68a-42f0-b91b-ba85846f36a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throw/Retrieve Spear"",
                    ""type"": ""Button"",
                    ""id"": ""8e0220b5-5e72-4ccf-84df-3e0aa0fbaa68"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""afb2cfa0-06e4-4c28-97ae-9280b51e3829"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Map"",
                    ""type"": ""Button"",
                    ""id"": ""8e70fd4d-7c29-4331-9da2-4444d40328fb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quest"",
                    ""type"": ""Button"",
                    ""id"": ""2dec7434-5d35-4f23-a6b9-afae95d763b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""d7a44e10-a428-446a-b43c-35957627e9f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CamLookAway"",
                    ""type"": ""Value"",
                    ""id"": ""863d1bec-c2de-4858-887a-f608b6e4651b"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Active Item"",
                    ""type"": ""Button"",
                    ""id"": ""5cfb8626-e1aa-4ab9-bc79-838ee5891917"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Special Ability"",
                    ""type"": ""Button"",
                    ""id"": ""688d5a40-0eea-4b89-8da6-088b9f2e6fb4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkipDialogue"",
                    ""type"": ""Button"",
                    ""id"": ""8bdcfe9a-95c3-4c7c-87fe-8741ffe1b29b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""a7490cf1-d3ef-49dd-9105-9331b4655f58"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""b56b9158-7397-4d0f-80e6-e23ff87cd743"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9d9ad43f-4646-4877-bd16-edc0d1646952"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Basic Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5518075c-eb0f-4403-b1d8-b8b756bde63b"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Charged Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d5e7ed8-ecab-463b-8081-b8647808084b"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throw/Retrieve Spear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8072267-c983-4736-8131-63c984d07d22"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44de0979-54d2-4017-9341-f2c705bfa726"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""99881218-f15e-43bf-989d-cac40632106c"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebf1879d-f8ac-4978-aef9-0b940ac32457"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CamLookAway"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4aba2001-1d9f-41db-a36b-9727145bd7dd"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Active Item"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09579125-0e35-4d71-96cf-4b048cecd841"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special Ability"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa8f7929-2e15-42be-aebd-87bd50b8734b"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quest"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab8a247e-20be-4466-86cb-60d1c10f9d52"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quest"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fdd8b39-f24b-45d7-8686-9a6270fe1074"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkipDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc017cca-3119-4bb5-83ae-68e39627d80a"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkipDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4dde01e9-97c8-40b7-be48-c30905435863"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42701725-f03b-4cdc-9fb6-497d0d0d3d40"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f281f01f-231a-4e03-a13d-869cda04aebd"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""default"",
            ""bindingGroup"": ""default"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Keyboard
            m_Keyboard = asset.FindActionMap("Keyboard", throwIfNotFound: true);
            m_Keyboard_Move = m_Keyboard.FindAction("Move", throwIfNotFound: true);
            m_Keyboard_BasicAttack = m_Keyboard.FindAction("Basic Attack", throwIfNotFound: true);
            m_Keyboard_ChargedAttack = m_Keyboard.FindAction("Charged Attack", throwIfNotFound: true);
            m_Keyboard_ThrowRetrieveSpear = m_Keyboard.FindAction("Throw/Retrieve Spear", throwIfNotFound: true);
            m_Keyboard_Dash = m_Keyboard.FindAction("Dash", throwIfNotFound: true);
            m_Keyboard_Map = m_Keyboard.FindAction("Map", throwIfNotFound: true);
            m_Keyboard_Quest = m_Keyboard.FindAction("Quest", throwIfNotFound: true);
            m_Keyboard_Pause = m_Keyboard.FindAction("Pause", throwIfNotFound: true);
            m_Keyboard_ActiveItem = m_Keyboard.FindAction("Active Item", throwIfNotFound: true);
            m_Keyboard_SpecialAbility = m_Keyboard.FindAction("Special Ability", throwIfNotFound: true);
            m_Keyboard_SkipDialogue = m_Keyboard.FindAction("SkipDialogue", throwIfNotFound: true);
            m_Keyboard_Interact = m_Keyboard.FindAction("Interact", throwIfNotFound: true);
            m_Keyboard_Inventory = m_Keyboard.FindAction("Inventory", throwIfNotFound: true);
            // Gamepad
            m_Gamepad = asset.FindActionMap("Gamepad", throwIfNotFound: true);
            m_Gamepad_Move = m_Gamepad.FindAction("Move", throwIfNotFound: true);
            m_Gamepad_BasicAttack = m_Gamepad.FindAction("Basic Attack", throwIfNotFound: true);
            m_Gamepad_ChargedAttack = m_Gamepad.FindAction("Charged Attack", throwIfNotFound: true);
            m_Gamepad_ThrowRetrieveSpear = m_Gamepad.FindAction("Throw/Retrieve Spear", throwIfNotFound: true);
            m_Gamepad_Dash = m_Gamepad.FindAction("Dash", throwIfNotFound: true);
            m_Gamepad_Map = m_Gamepad.FindAction("Map", throwIfNotFound: true);
            m_Gamepad_Quest = m_Gamepad.FindAction("Quest", throwIfNotFound: true);
            m_Gamepad_Pause = m_Gamepad.FindAction("Pause", throwIfNotFound: true);
            m_Gamepad_CamLookAway = m_Gamepad.FindAction("CamLookAway", throwIfNotFound: true);
            m_Gamepad_ActiveItem = m_Gamepad.FindAction("Active Item", throwIfNotFound: true);
            m_Gamepad_SpecialAbility = m_Gamepad.FindAction("Special Ability", throwIfNotFound: true);
            m_Gamepad_SkipDialogue = m_Gamepad.FindAction("SkipDialogue", throwIfNotFound: true);
            m_Gamepad_Interact = m_Gamepad.FindAction("Interact", throwIfNotFound: true);
            m_Gamepad_Inventory = m_Gamepad.FindAction("Inventory", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Keyboard
        private readonly InputActionMap m_Keyboard;
        private List<IKeyboardActions> m_KeyboardActionsCallbackInterfaces = new List<IKeyboardActions>();
        private readonly InputAction m_Keyboard_Move;
        private readonly InputAction m_Keyboard_BasicAttack;
        private readonly InputAction m_Keyboard_ChargedAttack;
        private readonly InputAction m_Keyboard_ThrowRetrieveSpear;
        private readonly InputAction m_Keyboard_Dash;
        private readonly InputAction m_Keyboard_Map;
        private readonly InputAction m_Keyboard_Quest;
        private readonly InputAction m_Keyboard_Pause;
        private readonly InputAction m_Keyboard_ActiveItem;
        private readonly InputAction m_Keyboard_SpecialAbility;
        private readonly InputAction m_Keyboard_SkipDialogue;
        private readonly InputAction m_Keyboard_Interact;
        private readonly InputAction m_Keyboard_Inventory;
        public struct KeyboardActions
        {
            private @PlayerInputMap m_Wrapper;
            public KeyboardActions(@PlayerInputMap wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Keyboard_Move;
            public InputAction @BasicAttack => m_Wrapper.m_Keyboard_BasicAttack;
            public InputAction @ChargedAttack => m_Wrapper.m_Keyboard_ChargedAttack;
            public InputAction @ThrowRetrieveSpear => m_Wrapper.m_Keyboard_ThrowRetrieveSpear;
            public InputAction @Dash => m_Wrapper.m_Keyboard_Dash;
            public InputAction @Map => m_Wrapper.m_Keyboard_Map;
            public InputAction @Quest => m_Wrapper.m_Keyboard_Quest;
            public InputAction @Pause => m_Wrapper.m_Keyboard_Pause;
            public InputAction @ActiveItem => m_Wrapper.m_Keyboard_ActiveItem;
            public InputAction @SpecialAbility => m_Wrapper.m_Keyboard_SpecialAbility;
            public InputAction @SkipDialogue => m_Wrapper.m_Keyboard_SkipDialogue;
            public InputAction @Interact => m_Wrapper.m_Keyboard_Interact;
            public InputAction @Inventory => m_Wrapper.m_Keyboard_Inventory;
            public InputActionMap Get() { return m_Wrapper.m_Keyboard; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(KeyboardActions set) { return set.Get(); }
            public void AddCallbacks(IKeyboardActions instance)
            {
                if (instance == null || m_Wrapper.m_KeyboardActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_KeyboardActionsCallbackInterfaces.Add(instance);
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @BasicAttack.started += instance.OnBasicAttack;
                @BasicAttack.performed += instance.OnBasicAttack;
                @BasicAttack.canceled += instance.OnBasicAttack;
                @ChargedAttack.started += instance.OnChargedAttack;
                @ChargedAttack.performed += instance.OnChargedAttack;
                @ChargedAttack.canceled += instance.OnChargedAttack;
                @ThrowRetrieveSpear.started += instance.OnThrowRetrieveSpear;
                @ThrowRetrieveSpear.performed += instance.OnThrowRetrieveSpear;
                @ThrowRetrieveSpear.canceled += instance.OnThrowRetrieveSpear;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Map.started += instance.OnMap;
                @Map.performed += instance.OnMap;
                @Map.canceled += instance.OnMap;
                @Quest.started += instance.OnQuest;
                @Quest.performed += instance.OnQuest;
                @Quest.canceled += instance.OnQuest;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @ActiveItem.started += instance.OnActiveItem;
                @ActiveItem.performed += instance.OnActiveItem;
                @ActiveItem.canceled += instance.OnActiveItem;
                @SpecialAbility.started += instance.OnSpecialAbility;
                @SpecialAbility.performed += instance.OnSpecialAbility;
                @SpecialAbility.canceled += instance.OnSpecialAbility;
                @SkipDialogue.started += instance.OnSkipDialogue;
                @SkipDialogue.performed += instance.OnSkipDialogue;
                @SkipDialogue.canceled += instance.OnSkipDialogue;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
            }

            private void UnregisterCallbacks(IKeyboardActions instance)
            {
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
                @BasicAttack.started -= instance.OnBasicAttack;
                @BasicAttack.performed -= instance.OnBasicAttack;
                @BasicAttack.canceled -= instance.OnBasicAttack;
                @ChargedAttack.started -= instance.OnChargedAttack;
                @ChargedAttack.performed -= instance.OnChargedAttack;
                @ChargedAttack.canceled -= instance.OnChargedAttack;
                @ThrowRetrieveSpear.started -= instance.OnThrowRetrieveSpear;
                @ThrowRetrieveSpear.performed -= instance.OnThrowRetrieveSpear;
                @ThrowRetrieveSpear.canceled -= instance.OnThrowRetrieveSpear;
                @Dash.started -= instance.OnDash;
                @Dash.performed -= instance.OnDash;
                @Dash.canceled -= instance.OnDash;
                @Map.started -= instance.OnMap;
                @Map.performed -= instance.OnMap;
                @Map.canceled -= instance.OnMap;
                @Quest.started -= instance.OnQuest;
                @Quest.performed -= instance.OnQuest;
                @Quest.canceled -= instance.OnQuest;
                @Pause.started -= instance.OnPause;
                @Pause.performed -= instance.OnPause;
                @Pause.canceled -= instance.OnPause;
                @ActiveItem.started -= instance.OnActiveItem;
                @ActiveItem.performed -= instance.OnActiveItem;
                @ActiveItem.canceled -= instance.OnActiveItem;
                @SpecialAbility.started -= instance.OnSpecialAbility;
                @SpecialAbility.performed -= instance.OnSpecialAbility;
                @SpecialAbility.canceled -= instance.OnSpecialAbility;
                @SkipDialogue.started -= instance.OnSkipDialogue;
                @SkipDialogue.performed -= instance.OnSkipDialogue;
                @SkipDialogue.canceled -= instance.OnSkipDialogue;
                @Interact.started -= instance.OnInteract;
                @Interact.performed -= instance.OnInteract;
                @Interact.canceled -= instance.OnInteract;
                @Inventory.started -= instance.OnInventory;
                @Inventory.performed -= instance.OnInventory;
                @Inventory.canceled -= instance.OnInventory;
            }

            public void RemoveCallbacks(IKeyboardActions instance)
            {
                if (m_Wrapper.m_KeyboardActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IKeyboardActions instance)
            {
                foreach (var item in m_Wrapper.m_KeyboardActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_KeyboardActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public KeyboardActions @Keyboard => new KeyboardActions(this);

        // Gamepad
        private readonly InputActionMap m_Gamepad;
        private List<IGamepadActions> m_GamepadActionsCallbackInterfaces = new List<IGamepadActions>();
        private readonly InputAction m_Gamepad_Move;
        private readonly InputAction m_Gamepad_BasicAttack;
        private readonly InputAction m_Gamepad_ChargedAttack;
        private readonly InputAction m_Gamepad_ThrowRetrieveSpear;
        private readonly InputAction m_Gamepad_Dash;
        private readonly InputAction m_Gamepad_Map;
        private readonly InputAction m_Gamepad_Quest;
        private readonly InputAction m_Gamepad_Pause;
        private readonly InputAction m_Gamepad_CamLookAway;
        private readonly InputAction m_Gamepad_ActiveItem;
        private readonly InputAction m_Gamepad_SpecialAbility;
        private readonly InputAction m_Gamepad_SkipDialogue;
        private readonly InputAction m_Gamepad_Interact;
        private readonly InputAction m_Gamepad_Inventory;
        public struct GamepadActions
        {
            private @PlayerInputMap m_Wrapper;
            public GamepadActions(@PlayerInputMap wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Gamepad_Move;
            public InputAction @BasicAttack => m_Wrapper.m_Gamepad_BasicAttack;
            public InputAction @ChargedAttack => m_Wrapper.m_Gamepad_ChargedAttack;
            public InputAction @ThrowRetrieveSpear => m_Wrapper.m_Gamepad_ThrowRetrieveSpear;
            public InputAction @Dash => m_Wrapper.m_Gamepad_Dash;
            public InputAction @Map => m_Wrapper.m_Gamepad_Map;
            public InputAction @Quest => m_Wrapper.m_Gamepad_Quest;
            public InputAction @Pause => m_Wrapper.m_Gamepad_Pause;
            public InputAction @CamLookAway => m_Wrapper.m_Gamepad_CamLookAway;
            public InputAction @ActiveItem => m_Wrapper.m_Gamepad_ActiveItem;
            public InputAction @SpecialAbility => m_Wrapper.m_Gamepad_SpecialAbility;
            public InputAction @SkipDialogue => m_Wrapper.m_Gamepad_SkipDialogue;
            public InputAction @Interact => m_Wrapper.m_Gamepad_Interact;
            public InputAction @Inventory => m_Wrapper.m_Gamepad_Inventory;
            public InputActionMap Get() { return m_Wrapper.m_Gamepad; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GamepadActions set) { return set.Get(); }
            public void AddCallbacks(IGamepadActions instance)
            {
                if (instance == null || m_Wrapper.m_GamepadActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_GamepadActionsCallbackInterfaces.Add(instance);
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @BasicAttack.started += instance.OnBasicAttack;
                @BasicAttack.performed += instance.OnBasicAttack;
                @BasicAttack.canceled += instance.OnBasicAttack;
                @ChargedAttack.started += instance.OnChargedAttack;
                @ChargedAttack.performed += instance.OnChargedAttack;
                @ChargedAttack.canceled += instance.OnChargedAttack;
                @ThrowRetrieveSpear.started += instance.OnThrowRetrieveSpear;
                @ThrowRetrieveSpear.performed += instance.OnThrowRetrieveSpear;
                @ThrowRetrieveSpear.canceled += instance.OnThrowRetrieveSpear;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Map.started += instance.OnMap;
                @Map.performed += instance.OnMap;
                @Map.canceled += instance.OnMap;
                @Quest.started += instance.OnQuest;
                @Quest.performed += instance.OnQuest;
                @Quest.canceled += instance.OnQuest;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @CamLookAway.started += instance.OnCamLookAway;
                @CamLookAway.performed += instance.OnCamLookAway;
                @CamLookAway.canceled += instance.OnCamLookAway;
                @ActiveItem.started += instance.OnActiveItem;
                @ActiveItem.performed += instance.OnActiveItem;
                @ActiveItem.canceled += instance.OnActiveItem;
                @SpecialAbility.started += instance.OnSpecialAbility;
                @SpecialAbility.performed += instance.OnSpecialAbility;
                @SpecialAbility.canceled += instance.OnSpecialAbility;
                @SkipDialogue.started += instance.OnSkipDialogue;
                @SkipDialogue.performed += instance.OnSkipDialogue;
                @SkipDialogue.canceled += instance.OnSkipDialogue;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
            }

            private void UnregisterCallbacks(IGamepadActions instance)
            {
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
                @BasicAttack.started -= instance.OnBasicAttack;
                @BasicAttack.performed -= instance.OnBasicAttack;
                @BasicAttack.canceled -= instance.OnBasicAttack;
                @ChargedAttack.started -= instance.OnChargedAttack;
                @ChargedAttack.performed -= instance.OnChargedAttack;
                @ChargedAttack.canceled -= instance.OnChargedAttack;
                @ThrowRetrieveSpear.started -= instance.OnThrowRetrieveSpear;
                @ThrowRetrieveSpear.performed -= instance.OnThrowRetrieveSpear;
                @ThrowRetrieveSpear.canceled -= instance.OnThrowRetrieveSpear;
                @Dash.started -= instance.OnDash;
                @Dash.performed -= instance.OnDash;
                @Dash.canceled -= instance.OnDash;
                @Map.started -= instance.OnMap;
                @Map.performed -= instance.OnMap;
                @Map.canceled -= instance.OnMap;
                @Quest.started -= instance.OnQuest;
                @Quest.performed -= instance.OnQuest;
                @Quest.canceled -= instance.OnQuest;
                @Pause.started -= instance.OnPause;
                @Pause.performed -= instance.OnPause;
                @Pause.canceled -= instance.OnPause;
                @CamLookAway.started -= instance.OnCamLookAway;
                @CamLookAway.performed -= instance.OnCamLookAway;
                @CamLookAway.canceled -= instance.OnCamLookAway;
                @ActiveItem.started -= instance.OnActiveItem;
                @ActiveItem.performed -= instance.OnActiveItem;
                @ActiveItem.canceled -= instance.OnActiveItem;
                @SpecialAbility.started -= instance.OnSpecialAbility;
                @SpecialAbility.performed -= instance.OnSpecialAbility;
                @SpecialAbility.canceled -= instance.OnSpecialAbility;
                @SkipDialogue.started -= instance.OnSkipDialogue;
                @SkipDialogue.performed -= instance.OnSkipDialogue;
                @SkipDialogue.canceled -= instance.OnSkipDialogue;
                @Interact.started -= instance.OnInteract;
                @Interact.performed -= instance.OnInteract;
                @Interact.canceled -= instance.OnInteract;
                @Inventory.started -= instance.OnInventory;
                @Inventory.performed -= instance.OnInventory;
                @Inventory.canceled -= instance.OnInventory;
            }

            public void RemoveCallbacks(IGamepadActions instance)
            {
                if (m_Wrapper.m_GamepadActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IGamepadActions instance)
            {
                foreach (var item in m_Wrapper.m_GamepadActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_GamepadActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public GamepadActions @Gamepad => new GamepadActions(this);
        private int m_defaultSchemeIndex = -1;
        public InputControlScheme defaultScheme
        {
            get
            {
                if (m_defaultSchemeIndex == -1) m_defaultSchemeIndex = asset.FindControlSchemeIndex("default");
                return asset.controlSchemes[m_defaultSchemeIndex];
            }
        }
        public interface IKeyboardActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnBasicAttack(InputAction.CallbackContext context);
            void OnChargedAttack(InputAction.CallbackContext context);
            void OnThrowRetrieveSpear(InputAction.CallbackContext context);
            void OnDash(InputAction.CallbackContext context);
            void OnMap(InputAction.CallbackContext context);
            void OnQuest(InputAction.CallbackContext context);
            void OnPause(InputAction.CallbackContext context);
            void OnActiveItem(InputAction.CallbackContext context);
            void OnSpecialAbility(InputAction.CallbackContext context);
            void OnSkipDialogue(InputAction.CallbackContext context);
            void OnInteract(InputAction.CallbackContext context);
            void OnInventory(InputAction.CallbackContext context);
        }
        public interface IGamepadActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnBasicAttack(InputAction.CallbackContext context);
            void OnChargedAttack(InputAction.CallbackContext context);
            void OnThrowRetrieveSpear(InputAction.CallbackContext context);
            void OnDash(InputAction.CallbackContext context);
            void OnMap(InputAction.CallbackContext context);
            void OnQuest(InputAction.CallbackContext context);
            void OnPause(InputAction.CallbackContext context);
            void OnCamLookAway(InputAction.CallbackContext context);
            void OnActiveItem(InputAction.CallbackContext context);
            void OnSpecialAbility(InputAction.CallbackContext context);
            void OnSkipDialogue(InputAction.CallbackContext context);
            void OnInteract(InputAction.CallbackContext context);
            void OnInventory(InputAction.CallbackContext context);
        }
    }
}
